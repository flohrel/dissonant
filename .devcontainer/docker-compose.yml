version: '3.7'

services:
  workspace:
    container_name: workspace
    build:
      context: .

    volumes:
      - workspace:/workspace:rw
      - node_modules:/workspace/node_modules:z
      # SSH directory
      - ~/.ssh:/home/node/.ssh
      # GPG directory
      - ~/.gnupg:/home/node/.gnupg
      # Shell history persistence
      - type: bind
        source: ~/.zsh_history
        target: /home/node/.zsh_history
      # Git config
      - type: bind
        source: ~/.gitconfig
        target: /home/node/.gitconfig
      # Overrides default command so things don't shut down after the process ends.
    command: [ "sleep", "infinity" ]
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:db

    # depends_on:
    #   - db

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  server:
    container_name: server
    build:
      context: ..
      target: server-dev

    volumes:
      - ${PWD}/packages/server:/app/dev/server:rw
      - node_modules:/app/node_modules:z

    restart: unless-stopped

    depends_on:
      - workspace
    # db:
    #   image: postgres:latest
    #   restart: unless-stopped
    #   volumes:
    #     - postgres-data:/var/lib/postgresql/data
    #   environment:
    #     POSTGRES_USER: ${POSTGRES_USER}
    #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #     POSTGRES_DB: ${POSTGRES_DB}
    #   healthcheck:
    #     test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -h $$(hostname -i)"]
    #     interval: 10s
    #     timeout: 5s
    #     retries: 5
    #   expose:
    #     - "5432"

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # volumes:
    #   postgres-data:

volumes:
  workspace:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}
  node_modules:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/node_modules
